{
  "name": "svgreact",
  "displayName": "SVGReact",
  "description": "This extension provides the functionality of react-svgr directly within the editor",
  "version": "1.0.1",
  "publisher": "pariola-droid",
  "icon": "images/icon.png",
  "repository": "https://github.com/Pariola-droid/svg-react",
  "license": "MIT",
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "svg",
    "react",
    "svgr",
    "component",
    "convert",
    "refactor",
    "sanitize",
    "jsx",
    "tsx"
  ],
  "activationEvents": [
    "onCommand:svgreact.convertFile",
    "onCommand:svgreact.preview",
    "onCommand:svgreact.refactor",
    "onCommand:svgreact.refactorSelection"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "svgreact.convertFile",
        "title": "SVGR: Convert to React Component"
      },
      {
        "command": "svgreact.preview",
        "title": "SVGR: Preview"
      },
      {
        "command": "svgreact.refactor",
        "title": "SVGR: Sanitize SVG Attributes in File"
      },
      {
        "command": "svgreact.refactorSelection",
        "title": "SVGR: Sanitize Attributes in Selection"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceExtname == .svg",
          "command": "svgreact.convertFile",
          "group": "1_conversion"
        },
        {
          "when": "resourceExtname == .svg",
          "command": "svgreact.preview",
          "group": "1_conversion"
        },
        {
          "when": "resourceExtname == .jsx || resourceExtname == .tsx",
          "command": "svgreact.refactor",
          "group": "2_refactor"
        }
      ],
      "editor/context": [
        {
          "when": "editorHasSelection && (resourceExtname == .jsx || resourceExtname == .tsx)",
          "command": "svgreact.refactorSelection",
          "group": "2_refactor"
        }
      ]
    },
    "configuration": {
      "title": "SVGReact",
      "properties": {
        "svgreact.outputDir": {
          "type": "string",
          "default": ".",
          "description": "Specifies the output directory for generated components. Use '.' for the same directory as the SVG."
        },
        "svgreact.typescript": {
          "type": "boolean",
          "default": false,
          "description": "Output a TypeScript component (.tsx) with typed props."
        },
        "svgreact.native": {
          "type": "boolean",
          "default": false,
          "description": "Output a React Native compatible component."
        },
        "svgreact.memo": {
          "type": "boolean",
          "default": false,
          "description": "Wrap the generated component in React.memo()."
        },
        "svgreact.ref": {
          "type": "boolean",
          "default": false,
          "description": "Forward a ref to the underlying SVG element."
        },
        "svgreact.icon": {
          "type": "boolean",
          "default": true,
          "description": "Set a default '1em' height and width for icon scaling."
        },
        "svgreact.exportType": {
          "type": "string",
          "enum": [
            "default",
            "named"
          ],
          "default": "default",
          "description": "The type of export to use (default or named)."
        },
        "svgreact.componentNamePrefix": {
          "type": "string",
          "default": "",
          "description": "A prefix to add to the generated component name (e.g., 'Icon')."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "yarn run check-types && yarn run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "yarn run check-types && yarn run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "@babel/generator": "^7.24.7",
    "@babel/parser": "^7.24.7",
    "@babel/traverse": "^7.24.7",
    "@svgr/core": "^6.5.1",
    "@svgr/plugin-jsx": "^6.5.1",
    "@svgr/plugin-prettier": "^6.5.1",
    "@svgr/plugin-svgo": "^6.5.1"
  },
  "devDependencies": {
    "@types/babel__generator": "^7.6.8",
    "@types/babel__traverse": "^7.20.6",
    "@types/svgo": "^2.6.4",
    "@types/vscode": "^1.101.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "eslint": "^9.23.0",
    "esbuild": "^0.25.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.2",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1"
  }
}
